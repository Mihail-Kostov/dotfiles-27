#!/bin/bash
tofly () {
  cd $FLY/$@    ;
}
compctl -/ -W $FLY/$@ tofly

lab () {
  cd $LAB/$@    ;
}
compctl -/ -W $LAB/$@ lab

extract () {
  if [ -f $1 ]; then
    case $1 in
      *.tar.bz2)  tar -jxvf $1                        ;;
      *.tar.gz)   tar -zxvf $1                        ;;
      *.bz2)      bunzip2 $1                          ;;
      *.dmg)      hdiutil mount $1                    ;;
      *.gz)       gunzip $1                           ;;
      *.tar)      tar -xvf $1                         ;;
      *.tbz2)     tar -jxvf $1                        ;;
      *.tgz)      tar -zxvf $1                        ;;
      *.zip)      unzip $1                            ;;
      *.ZIP)      unzip $1                            ;;
      *.pax)      cat $1 | pax -r                     ;;
      *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
      *.Z)        uncompress $1                       ;;
      *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
function jamp() {
  emulate -L zsh
  autoload -U colors
  local color=$fg_bold[blue]
  integer i=0
  dirs -p | while read dir
  do
      local num="${$(printf "%-4d " $i)/ /.}"
      printf " %s  $color%s$reset_color\n" $num $dir
      (( i++ ))
  done
  integer dir=-1
  read -r 'dir?Jump to directory: ' || return
  (( dir == -1 )) && return
  if (( dir < 0 || dir >= i ))
  then
      echo d: no such directory stack entry: $dir
      return 1
  fi
  cd ~$dir
}
function mdate() {
    mkdir `date +%F`
    cd `date +%F`
    # -d  -f  -r  -t  -v
}


snap() {
  while :; do
    imagesnap ~/Pictures/snap/$(date +%y%m%d%H%M%S).png
    sleep ${1-1}
  done
}
fdupes() {
  find . -type f ! -empty -exec md5 -r {} +|awk '++a[$1]!=1'|cut -d' ' -f2-|tr '\n' '\0'|xargs -0 del
}

# Find files and exec commands at them.
# $ find-exec .coffee cat | wc -l
find-exec() {
  find . -type f -iname "*${1:-}*" -exec "${2:-file}" '{}' \;
}
